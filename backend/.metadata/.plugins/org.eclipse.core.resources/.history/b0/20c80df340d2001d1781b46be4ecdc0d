package com.api.bankxapp.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.api.bankxapp.dto.CustomerDTO;
import com.api.bankxapp.dto.CustomerDetailsDTO;
import com.api.bankxapp.dto.TransactionDTO;
import com.api.bankxapp.producer.RabbitMQProducer;
import com.api.bankxapp.service.CustomerService;
import com.api.bankxapp.service.TransactionService;

@RestController

@CrossOrigin(origins = "http://localhost:4200")

public class TransactionController {

	@Autowired
	private TransactionService transactionService;
	
	@Autowired
	private CustomerService customerService;
	
	@Autowired
	private RabbitMQProducer producer;
	
	
	
	@PostMapping(path="/createTransaction")
    public ResponseEntity<TransactionDTO> createTransaction(@RequestBody TransactionDTO transaction){
        TransactionDTO savedTransaction = transactionService.createTransaction(transaction);
        return new ResponseEntity<>(savedTransaction, HttpStatus.CREATED);
    }
	
	@PostMapping(path="/createCustomer")
    public ResponseEntity<CustomerDetailsDTO> createCustomer(@RequestBody CustomerDetailsDTO customerdetails){
        customerService.createCustomer(customerdetails);
        producer.sendMessage("Savng Account Credited with Rs.500");
        return new ResponseEntity<>(customerdetails, HttpStatus.CREATED);
    }
	
	
	@GetMapping(path="/getAllCustomers")
	public List<CustomerDTO> getAllCustomers(){
		return customerService.getAllCustomers();
	}
	
	@PostMapping(path="/transferToOtherAccount")
    public ResponseEntity<TransactionDTO> transferToOtherAccount(@RequestBody TransactionDTO transactionDTO){
        transactionService.transferToOtherAccount(transactionDTO);
        //producer.sendMessage("Savng Account Credited with Rs.500");
        return new ResponseEntity<>(transactionDTO, HttpStatus.CREATED);
    }
}
